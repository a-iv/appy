0.5.2 (2010-02-05)
- Performance improvements in the XML marshaller
- Added a class "appy.gen.No" allowing to explain to the end-user why he can't trigger some workflow condition.

0.5.1 (2010-02-02)
- Bugfixes (encoding problems) in Python-to-XML marshaller.

0.4.1 (2009-11-03)
- Ajax framework within appy.gen
- More improvements in XHTML->ODT conversion within appy.pod

0.4.0 (2009-08-12)
- Alpha version.

0.3.1 (2009-04-10)
- gen: added the concept of "phase" for structuring a root content type.

0.3.0 (2009-03-25)
- Includes the first version of appy.gen, a new code generator for Plone for building complex and shared web applications.
- pod: new function "document" that allows to integrate, in a pod template, the content of an external document or image.
- pod: converter.py: instead of asking to OpenOffice to convert an odt file into pdf, doc, etc, converter.py can now ask to update an odt document (refresh indexes and table of contents, resolve external links). Resolving external links is needed if you use the new "document" function (excepted for images and pdfs).
- pod: new boolean parameter to the renderer: "forceOoCall". If True, OpenOffice will be contacted in server mode even if the result is asked in odt. This way, OpenOffice will update indexes and resolve external links. Set this parameter to True when using the new "document" function.
- pod: you may now create pod templates with OpenOffice 3.x (parsing problem with notes is solved)
- pod: OO conversion: connection to OO in server mode under Windows solved ("import socket" before "import uno")
- pod: instruction "do ... for ...' accepts now all Python objects implementing the iterator protocol, like iterators from Django query sets (querySet.iterator())

0.2.1 (2008-06-04)
- XHTML to ODT conversion: possibility to use 2 different predefined pod-styles to apply to "li" elements: the default one, and a second one named "podItemKeepWithNext" that ensures that the targeted "li" element will always stay on the same page as the paragraph below him.
- Minor bugfixes.

0.2.0 (2008-03-23)
- Implementation of an "else" statement.
- "if" statements may be named in order to solve ambiguities when linking "if" and "else" statements.
- Besides "if" and "else" statements, an "if" expression is also proposed under the form of a function named "test" that is defined in the default pod context.

0.1.0 (2008-03-10)
- Because of huge international pressure, version 0.0.4 was published as 0.1.0. From now on, the pod numbering scheme will follow the rule MAJOR.MINOR.BUGFIX: development of major functions will increment MAJOR (the first figure); development of minor functions will increment MINOR (the second figure) while bug fixes will increment BUGFIX (the third figure).
- From now on, pod eggs will be published on http://pypi.python.org.

0.0.4 (2008-03-10)
- Management of XHTML tables.
- XHTML parser is now case-insensitive.

0.0.3 (2008-01-24)
- Refactoring in the SAX parsers used in pod has improved overall design and performance.
- Pod replacements now work in headers and footers.
- A "from" clause can now complete any pod statement, allowing to include arbitrary ODT content.
- The "xhtml" function MUST now be used in "from" clauses ("do text from xhtml(xhtmlChunk)") and not in pod expressions anymore (users migrating from pod 0.0.2 to 0.0.3 and using the "xhtml" function will need to modify their pod templates).

0.0.2 (2007-10-01)
- Possibility to integrate XHTML chunks into ODT documents. You can customize the way pod maps html elements or CSS styles to ODT styles.
- New automated test system.

0.0.1 (2007-05-22)
- First version of appy.pod.
